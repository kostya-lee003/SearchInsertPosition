//created by kostyalee on 22.07.2021
//
//SEARCH INSERT POSITION
// easy leetcode task
//
//
//-Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
//
//-You must write an algorithm with O(log n) runtime complexity.
//
//
//Example 1:
//Input: nums = [1,3,5,6], target = 5
//Output: 2
//
//Example 2:
//Input: nums = [1,3,5,6], target = 2
//Output: 1
//
//Example 3:
//Input: nums = [1,3,5,6], target = 7
//Output: 4
//
//Example 4:
//Input: nums = [1,3,5,6], target = 0
//Output: 0
//
//Example 5:
//Input: nums = [1], target = 0
//Output: 0

import UIKit


let numbers = [1, 3, 4, 6, 9, 11, 13, 14, 15, 18]

func searchInsert(_ nums: [Int], _ target: Int) -> Int {
    
    var leftIndex = 0
    var rightIndex = nums.count - 1
    
    while leftIndex <= rightIndex {
        let middleIndex = (leftIndex + rightIndex) / 2
        let middleValue = nums[middleIndex]
        print(middleValue)
        
        if middleValue == target {
            return middleIndex
        }
        
        if target < middleValue {
            rightIndex = middleIndex - 1
        }
        
        if target > middleValue {
            leftIndex = middleIndex + 1
        }
        
        if leftIndex == rightIndex + 1 {
            return leftIndex
        }
        
    }
        return 0
}

print(searchInsert(numbers, 10))




